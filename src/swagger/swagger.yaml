swagger: "2.0"
info:
  description: "Implementation of service fabric reliable concurrent queue as a service. [Github](https://github.com/hareeshnagaraj/sf_queue_service)"
  version: "1.0.0"
  title: "SF Reliable Concurrent Queue as service"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/666"
tags:
- name: "Management"
  description: "Manage all queues"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "Queue"
  description: "Work with a specific queue"
schemes:
- "http"
paths:
  /getOradd/{queueName}:
    post:
      tags:
      - "Management"
      summary: "Gets or adds a new reliable concurent queue if it doesn't exist and returns a unique identifier to that queue"
      description: ""
      operationId: "getoradd"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "queueName"
        in: "path"
        description: "Name of queue to getoradd"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Configuration for reliable concurrent queue"
        schema:
          $ref: "#/definitions/GetOrAddQueueMessage"
      responses:
        200:
          description: "
          If the queue does not exist, returns the fully qualified uri/endpoint of the newly getoraddd queue. If the queue does exist, return the fully qualified uri/endpoint of the existing queue.
          - "
          schema:
            $ref: '#/definitions/Queue'
        405:
          description: "Invalid input. Returned if the provided queue name is not embeddable in a URI or the parameters do not match a queue getoraddd with the provided queue name."
  /delete/{queueName}:
    get:
      tags:
      - "Management"
      summary: "Deletes the reliable concurent queue corresponding to the provided queue name"
      description: ""
      operationId: "delete"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "queueName"
        in: "path"
        description: "Name of queue to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "
          The queue was successfully deleted."
        405:
          description: "Invalid input. Returned if the provided queue name does not exist."
  /list/{queueNamePrefix}:
    get:
      tags:
      - "Management"
      summary: "Lists all the RCQ currently available"
      description: ""
      operationId: "listPrefix"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "queueNamePrefix"
        in: "path"
        description: "Prefix of RCQ instances to list. To list all values, use 'all' as the queueNamePrefix. "
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "The list of queues was successfully returned."
        405:
          description: "The name prefix is."
  
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  GetOrAddQueueMessage:
    type: "object"
    properties:
      dequeueTimeoutInSeconds:
        type: "integer"
        format: "uint64"
      retentionPeriodInSeconds:
        type: "integer"
        format: "uint64"
      deduplicationPeriodInSeconds:
        type: "integer"
        format: "uint64"
    xml:
      name: "GetOrAddQueueMessage"
  Queue:
    type: "object"
    properties:
      queueName:
        type: "string"
      queueEndpoint:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
